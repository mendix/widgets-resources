// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Start drafting an email in the platform specified email client. This might work differently for each user depending on their platform and local configuration.
 * @param {string} recipient - The recipient, or recipients, separated by comma's.
 * @param {string} cc - The Carbon Copy recipient, or recipients, separated by comma's.
 * @param {string} bcc - The Blind Carbon Copy recipient, or recipients, separated by comma's.
 * @param {string} subject
 * @param {string} body
 * @returns {Promise.<boolean>}
 */
export async function DraftEmail(recipient, cc, bcc, subject, body) {
    // BEGIN USER CODE
    var url = "mailto:";
    if (recipient) {
        url += "".concat(encodeURI(recipient), "?");
    }
    if (cc) {
        url += "cc=".concat(encodeURIComponent(cc), "&");
    }
    if (bcc) {
        url += "bcc=".concat(encodeURIComponent(bcc), "&");
    }
    if (subject) {
        url += "subject=".concat(encodeURIComponent(subject), "&");
    }
    if (body) {
        url += "body=".concat(encodeURIComponent(body), "&");
    }
    // Remove the last '?' or '&'
    url = url.slice(0, -1);
    // Native platform
    if (navigator && navigator.product === "ReactNative") {
        var Linking = require("react-native").Linking;
        return Linking.canOpenURL(url).then(function(supported) {
            if (!supported) {
                return false;
            }
            return Linking.openURL(url).then(function() {
                return true;
            });
        });
    }
    // Hybrid platform
    if (window && window.cordova) {
        window.open(url, "_system");
        return Promise.resolve(true);
    }
    // Web platform
    if (window) {
        window.location.href = url;
        return Promise.resolve(true);
    }
    return Promise.resolve(false);
    // END USER CODE
}
