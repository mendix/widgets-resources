import { Component, createElement } from "react";
import { BadgeSample } from "./components/BadgeSample";

export class preview extends Component {
    render() {
        return (
            <div ref={this.parentInline}>
                <BadgeSample {...this.transformProps(this.props)}></BadgeSample>
            </div>
        );
    }

    parentInline(node) {
        // Temporary fix, the web modeler add a containing div, to render inline we need to change it.
        if (node && node.parentElement && node.parentElement.parentElement) {
            node.parentElement.parentElement.style.display = "inline-block";
        }
    }

    transformProps(props) {
        return {
            type: props.<%= packageName %>Type,
            bootstrapStyle: props.bootstrapStyle,
            className: props.class,
            clickable: false,
            style: this.parseStyle(props.style),
            defaultValue: props.<%= packageName %>Value ? props.<%= packageName %>Value : "",
            value: props.valueAttribute
        };
    }

    parseStyle(style = "") {
        try {
            return style.split(";").reduce((styleObject, line) => {
                const pair = line.split(":");
                if (pair.length === 2) {
                    const name = pair[0].trim().replace(/(-.)/g, match => match[1].toUpperCase());
                    styleObject[name] = pair[1].trim();
                }
                return styleObject;
            }, {});
        } catch (_) {
            return {};
        }
    }
}

export function getPreviewCss() {
    return require("./ui/<%= name %>.css");
}

