name: Run build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    scope:
        name: Set scope
        runs-on: ubuntu-latest
        outputs:
            since: ${{ steps.since.outputs.since }}
        steps:
            - id: since
              if: github.event_name == 'pull_request'
              run: echo "::set-output name=since::-- --since origin/${{ github.base_ref }}"
    harden_security:
        name: Check SHA in GH Actions
        runs-on: ubuntu-latest
        steps:
            - name: "Checking-out code"
              uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
            - name: "Ensure SHA pinned actions"
              uses: zgosalvez/github-actions-ensure-sha-pinned-actions@0b552a197e44b819629237e065d781f5ca691460 # v1.1.1
    check:
        name: "Checks"
        runs-on: ubuntu-latest
        needs: scope

        steps:
            - name: "Checking-out code"
              uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
              with:
                  fetch-depth: 0
            - name: "Defining node version"
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
              with:
                  node-version-file: ".nvmrc"
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"
            - name: "Installing dependencies"
              run: npm run bootstrap
            - name: "Linting code"
              run: npm run lint ${{ needs.scope.output.since }}
            - name: "Running unit tests"
              run: npm run test ${{ needs.scope.output.since }}
    build:
        name: "Build for ${{ matrix.target }} target on ${{ matrix.os }}"
        runs-on: ${{ matrix.os }}
        needs: [scope, check]

        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
                target: [build, release]

        steps:
            - name: "Checking-out code"
              uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
              with:
                  fetch-depth: 0
            - name: "Defining node version"
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
              with:
                  node-version-file: ".nvmrc"
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"
            - name: "Installing dependencies"
              run: npm run bootstrap
            - name: "Running build for development"
              run: npm run build ${{ needs.scope.output.since }}
              env:
                  NODE_OPTIONS: --max_old_space_size=8192
    script-tests:
        name: "Script tests (Node ${{ matrix.node }}, ${{ matrix.os }})"
        runs-on: ${{ matrix.os }}
        needs: scope
        strategy:
            matrix:
                node: [16]
                os: [windows-latest, ubuntu-latest]
                include:
                    - node: 14
                      os: ubuntu-latest
                      experimental: true
        steps:
            - name: "Checking-out code"
              uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
              with:
                  fetch-depth: 0
            - name: "Defining node version"
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
              with:
                  node-version: ${{ matrix.node }}
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"
            - name: "Installing dependencies"
              run: npm run bootstrap
            - name: Increase number of watchers
              if: startsWith(matrix.os, 'ubuntu')
              run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
            - name: "Running build for development"
              run: npm run test:scripts ${{ needs.scope.output.since }}
