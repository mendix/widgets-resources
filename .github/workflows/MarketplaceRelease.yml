name: Marketplace Release

on:
    push:
        tags:
            - "*-web-v*"
            - "*-native-v*"
            - "*-hybrid-v*"
            - "data-widgets-v*"
            - "atlas-core-v*"
            - "atlas-web-*-v*"

jobs:
    publish_release:
        name: "Marketplace Release"
        runs-on: ubuntu-latest

        steps:
            - name: "Checking-out code"
              uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
            - name: "Defining Environment Variables"
              id: variables
              run: echo "::set-output name=tag::$(git tag --points-at HEAD)"
            - name: "Defining lerna scope"
              uses: jungwinter/split@c185fe95439c136a8788b7f700bd5275920d7109 # v1
              id: scope
              with:
                  msg: "${{ steps.variables.outputs.tag }}"
                  seperator: "-v"
            - name: "Defining node version"
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
              with:
                  node-version-file: ".nvmrc"
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"
            - name: "Installing dependencies"
              run: npm run bootstrap
            - name: Cache Nx
              uses: actions/cache@v2
              with:
                  path: node_modules/.cache/nx
                  key:
                      cache-nx-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-${{ github.sha
                      }}
                  restore-keys: |
                      cache-nx-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
                      cache-nx-${{ hashFiles('yarn.lock') }}-
            - name: "Building native widgets and js actions"
              if: contains(steps.scope.outputs._0, '-native')
              run: npm run release:native
            - name: "Updating Native Mobile Resources project"
              if: contains(steps.scope.outputs._0, '-native')
              run: "npm run create-modules:native"
              env:
                  GH_USERNAME: ${{ secrets.GH_USERNAME }}
                  GH_EMAIL: ${{ secrets.GH_EMAIL }}
                  GH_NAME: ${{ secrets.GH_NAME }}
                  GH_PAT: ${{ secrets.GH_PAT }}
                  TAG: ${{ steps.variables.outputs.tag }}
            - name: "Check changes and publish package ${{ steps.variables.outputs.tag }}"
              run: "npm run release:marketplace -- --scope '${{ steps.scope.outputs._0 }}'"
              env:
                  MARKETPLACE_API_KEY: ${{ secrets.MARKETPLACE_API_KEY }}
                  MARKETPLACE_USERNAME: ${{ secrets.MARKETPLACE_USERNAME }}
                  TAG: ${{ steps.variables.outputs.tag }}
            - name: "Send slack msg on failure"
              if: ${{ failure() }}
              uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
              env:
                  SLACK_CHANNEL: ${{ secrets.SLACK_MULTIXP_CHANNEL }}
                  SLACK_COLOR: ${{ job.status }}
                  SLACK_ICON: ${{ secrets.WEBCONTENT_BOT_IMAGE }}
                  SLACK_MESSAGE:
                      "Something went wrong while uploading version ${{ steps.scope.outputs._1 }} of package ${{
                      steps.scope.outputs._0 }} to the marketplace. <https://github.com/${{ github.repository
                      }}/actions/runs/${{ github.run_id }}|More info..>"
                  SLACK_TITLE: ":warning: *Automation Failed*"
                  SLACK_USERNAME: ${{ secrets.WEBCONTENT_BOT_NAME }}
                  SLACK_WEBHOOK: ${{ secrets.SLACK_MULTIXP_WEBHOOK }}
                  SLACK_FOOTER: "Created by Aliens"
                  MSG_MINIMAL: true
