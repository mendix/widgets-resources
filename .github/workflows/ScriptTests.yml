name: Script tests

on:
    push:
        branches: [master]
    pull_request_target:
        branches: [master]
        types: [opened, synchronize, reopened]

jobs:
    approve:
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
        runs-on: ubuntu-latest
        steps:
            - name: Approve
              run: echo For security reasons, all forked pull requests need to be approved first before running any automated CI.
        environment:
            name: Integrated Forked PRs
    test:
        name: "Script tests (Node ${{ matrix.node }}, ${{ matrix.os }})"
        runs-on: ${{ matrix.os }}
        if: jobs.approve.result == 'sucess' || jobs.approve.result == 'skipped'
        strategy:
            matrix:
                node: [14]
                os: [windows-latest, ubuntu-latest]
                include:
                    - node: 12
                      os: ubuntu-latest
                      experimental: true

        steps:
            - name: "Checking changed files"
              id: files
              uses: softprops/diffset@v1
              with:
                global_files: |
                  !{packages/**/*,configs/e2e/*.json}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: "Checking-out code"
              uses: actions/checkout@v2
              with:
                  submodules: false
            - name: "Fetching master to compare"
              if: github.event_name == 'pull_request' && steps.files.outputs.global_files == ''
              run:
                  git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
            - name: "Defining environment variables"
              if: startsWith(matrix.os, 'windows')
              id: variablesWindows
              run: |
                  echo "::set-output name=arg::$(If ('${{ steps.files.outputs.global_files }}' -eq '' -AND '${{ github.event_name == 'pull_request' }}' -eq 'true'){ echo '--since origin/${{ github.base_ref }}' } Else { echo '' })"
            - name: "Defining environment variables"
              if: startsWith(matrix.os, 'ubuntu')
              id: variablesLinux
              run: |
                  echo "::set-output name=arg::$(if [ "${{ steps.files.outputs.global_files }}" = "" ] && ${{ github.event_name == 'pull_request' }}; then echo '--since origin/${{ github.base_ref }}'; else echo ''; fi)"
            - name: "Defining cache"
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            - name: "Defining node version"
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}
            - name: "Installing dependencies"
              run: npm install
            - name: Increase number of watchers
              if: startsWith(matrix.os, 'ubuntu')
              run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
            - name: "Running PIW-Tools commands tests"
              run:
                  npm run test:scripts -- ${{ steps.variablesLinux.outputs.arg }} ${{ steps.variablesWindows.outputs.arg
                  }}
