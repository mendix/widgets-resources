name: Script tests

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    test:
        name: "Script tests (Node ${{ matrix.node }}, ${{ matrix.os }})"
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            node: [14]
            os: [windows-latest, ubuntu-latest]
            include:
              - node: 10
                os: ubuntu-latest
                experimental: true

        steps:
            - name: "Checking changed files"
              id: files
              uses: jitterbit/get-changed-files@v1
            - name: "Checking-out code"
              uses: actions/checkout@v2
              with:
                  submodules: false
            - name: "Defining environment variables"
              if: startsWith(matrix.os, 'windows')
              run: |
                echo "CHANGED_PACKAGES_FILES=$('${{ steps.files.outputs.all }}' | Select-String 'packages')" >> $GITHUB_ENV
                echo $CHANGED_PACKAGES_FILES
                echo "PARTIAL_BUILD=$(If ($CHANGED_PACKAGES_FILES -ne '' -AND '${{ github.event_name }}' -eq 'pull_request'){ echo 'true' } Else { echo 'false' })" >> $GITHUB_ENV
                echo $PARTIAL_BUILD
                echo "SINCE_ARG=$(If ($PARTIAL_BUILD -eq 'true' ){ echo '--since ${{ github.event.pull_request.base.ref }}' } Else { echo '' })" >> $GITHUB_ENV
                echo $SINCE_ARG
            - name: "Defining environment variables"
              if: startsWith(matrix.os, 'ubuntu')
              run: |
                echo CHANGED_PACKAGES_FILES=$(echo "${{ steps.files.outputs.all }}" | grep -v "^packages") >> $GITHUB_ENV
                echo $CHANGED_PACKAGES_FILES
                echo PARTIAL_BUILD=$(if [ "${CHANGED_PACKAGES_FILES}" = "" ] && [ "${{ github.event_name }}" = "pull_request" ]; then echo "true"; else echo "false"; fi) >> $GITHUB_ENV
                echo $PARTIAL_BUILD
                echo SINCE_ARG=$(if [ "$PARTIAL_BUILD" = "true" ]; then echo "--since ${{ github.event.pull_request.base.ref }}"; else echo ""; fi) >> $GITHUB_ENV
                echo $SINCE_ARG
            - name: "Defining cache"
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: "Defining node version"
              uses: actions/setup-node@v1
              with:
                node-version: ${{ matrix.node }}
            - name: "Installing dependencies"
              run: npm install
            - name: "Running PIW-Tools commands tests"
              run: npm run test:scripts -- $SINCE_ARG
