// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the code between BEGIN USER CODE and END USER CODE
// Other code you write will be lost the next time you deploy the project.

import ReactNative from "react-native";
import { StorageValue } from "./StorageValue.interface";

/**
 * @param {string} key - This field is required.
 * @param {MxObject} value - This field is required.
 * @returns {boolean}
 */
function SetStorageItemObject(key?: string, value?: mendix.lib.MxObject): Promise<boolean> {
    // BEGIN USER CODE
    // Documentation https://facebook.github.io/react-native/docs/asyncstorage

    const AsyncStorage: typeof ReactNative.AsyncStorage = require("react-native").AsyncStorage;

    if (!key) {
        throw new TypeError("Input parameter 'Key' is required");
    }

    if (!value) {
        throw new TypeError("Input parameter 'Value' is required");
    }

    const serializedObject = serializeMxObject(value);

    return AsyncStorage.setItem(key, JSON.stringify(serializedObject)).then(() => true);

    function serializeMxObject(object: mendix.lib.MxObject): StorageValue {
        return object.getAttributes().reduce<StorageValue>(
            (accumulator, attributeName) => ({
                ...accumulator,
                [attributeName]: object.get(attributeName)
            }),
            { guid: object.getGuid() }
        );
    }
    // END USER CODE
}
