// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the code between BEGIN USER CODE and END USER CODE
// Other code you write will be lost the next time you deploy the project.

import ReactNative from "react-native";
import { StorageValue } from "./StorageValue";

/**
 * @param {string} key - This field is required.
 * @param {MxObject} value - This field is required.
 * @returns {boolean}
 */
function SetStorageItemObject(key?: string, value?: mendix.lib.MxObject): Promise<boolean> {
    // BEGIN USER CODE

    if (!key) {
        throw new TypeError("Input parameter 'Key' is required");
    }

    if (!value) {
        throw new TypeError("Input parameter 'Value' is required");
    }

    const serializedObject = serializeMxObject(value);

    return setItem(key, JSON.stringify(serializedObject)).then(() => true);

    function setItem(key: string, value: string): Promise<void> {
        if (navigator && navigator.product === "ReactNative") {
            const AsyncStorage: typeof ReactNative.AsyncStorage = require("@react-native-community/async-storage")
                .default;
            return AsyncStorage.setItem(key, value);
        }

        if (window) {
            window.localStorage.setItem(key, value);
            return Promise.resolve();
        }

        throw new Error("No storage API available");
    }

    function serializeMxObject(object: mendix.lib.MxObject): StorageValue {
        return object.getAttributes().reduce<StorageValue>(
            (accumulator, attributeName) => {
                accumulator[attributeName] = object.get(attributeName);
                return accumulator;
            },
            { guid: object.getGuid() }
        );
    }
    // END USER CODE
}
