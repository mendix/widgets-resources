// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gallery renders correctly 1`] = `
<View
  style={Object {}}
  testID="gallery-test"
>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "11",
        },
        Object {
          "id": "22",
        },
        Object {
          "id": "33",
        },
        Object {
          "id": "_blank",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="gallery-test-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-11"
          >
            11
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-22"
          >
            22
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-33"
          >
            33
          </View>
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "flex": 0.5,
                "margin": 0,
                "padding": 0,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Gallery renders correctly with infinite load  1`] = `
<View
  style={Object {}}
  testID="gallery-test"
>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "11",
        },
        Object {
          "id": "22",
        },
        Object {
          "id": "33",
        },
        Object {
          "id": "_blank",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="gallery-test-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-11"
          >
            11
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-22"
          >
            22
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-33"
          >
            33
          </View>
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "flex": 0.5,
                "margin": 0,
                "padding": 0,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Gallery renders correctly with onclick event 1`] = `
<View
  style={Object {}}
  testID="gallery-test"
>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "11",
        },
        Object {
          "id": "22",
        },
        Object {
          "id": "33",
        },
        Object {
          "id": "_blank",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="gallery-test-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-11"
          >
            11
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-22"
          >
            22
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-33"
          >
            33
          </View>
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "flex": 0.5,
                "margin": 0,
                "padding": 0,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Gallery renders with empty placeholder 1`] = `
<View
  style={Object {}}
  testID="gallery-test"
>
  <RCTScrollView
    ListEmptyComponent={
      <Text>
        Empty list...
      </Text>
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="gallery-test-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <Text
        onLayout={[Function]}
      >
        Empty list...
      </Text>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Gallery with pagination renders correctly 1`] = `
<View
  style={Object {}}
  testID="gallery-test"
>
  <RCTScrollView
    ListFooterComponent={
      <View>
        <Button
          onPress={[Function]}
          testID="gallery-test-pagination-button"
          title="Load more items..."
        />
      </View>
    }
    data={
      Array [
        Object {
          "id": "11",
        },
        Object {
          "id": "22",
        },
        Object {
          "id": "33",
        },
        Object {
          "id": "_blank",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="gallery-test-list"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-11"
          >
            11
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-22"
          >
            22
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                undefined,
                Object {
                  "flex": 0.5,
                },
              ]
            }
            testID="gallery-test-list-item-33"
          >
            33
          </View>
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "flex": 0.5,
                "margin": 0,
                "padding": 0,
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View>
          <View
            accessibilityRole="button"
            accessibilityState={Object {}}
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="gallery-test-pagination-button"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Load more items...
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
