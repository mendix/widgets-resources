// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table renders the structure correctly 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly for preview when no header is provided 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-center"
        column={
          Object {
            "accessor": "item",
            "alignment": "center",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        preview={true}
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "center",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with column alignments 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr 1fr",
        }
      }
    >
      <Header
        className="align-column-center"
        column={
          Object {
            "accessor": "item",
            "alignment": "center",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "center",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
            Object {
              "accessor": "item",
              "alignment": "right",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test 2",
              "hidden": false,
              "id": "1",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <Header
        className="align-column-right"
        column={
          Object {
            "accessor": "item",
            "alignment": "right",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test 2",
            "hidden": false,
            "id": "1",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_1"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "center",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
            Object {
              "accessor": "item",
              "alignment": "right",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test 2",
              "hidden": false,
              "id": "1",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
        <div
          className="td td-borders"
          key="row_0_cell_1"
        >
          Test 2
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with custom filtering 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": <input
              type="text"
              value="dummy"
            />,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={true}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": <input
                type="text"
                value="dummy"
              />,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with dragging 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={true}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with dynamic row class 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr myclass"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with empty placeholder 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with filtering 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": <input
              type="text"
              value="dummy"
            />,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={true}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": <input
                type="text"
                value="dummy"
              />,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with header wrapper 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <div
        className="my-custom-header"
      >
        <Header
          className="align-column-left"
          column={
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            }
          }
          dragOver=""
          draggable={false}
          filterable={false}
          hidable={false}
          isDragging={false}
          key="headers_column_0"
          resizable={false}
          resizer={
            <ColumnResizer
              onResizeEnds={[Function]}
              setColumnWidth={[Function]}
            />
          }
          setColumnOrder={[Function]}
          setDragOver={[Function]}
          setIsDragging={[Function]}
          setSortBy={[Function]}
          sortBy={Array []}
          sortable={false}
          visibleColumns={
            Array [
              Object {
                "accessor": "item",
                "alignment": "left",
                "canDrag": false,
                "canHide": false,
                "canResize": false,
                "canSort": false,
                "customFilter": null,
                "header": "Test",
                "hidden": false,
                "id": "0",
                "weight": 1,
                "width": "autoFill",
              },
            ]
          }
        />
      </div>
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with hiding 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr fit-content(50px)",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={true}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <ColumnSelector
        columns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
        hiddenColumns={Array []}
        setHiddenColumns={[Function]}
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
        <div
          className="td column-selector td-borders"
        />
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with paging 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={false}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    >
      <Pagination
        canNextPage={false}
        canPreviousPage={true}
        gotoPage={[Function]}
        nextPage={[Function]}
        page={1}
        pageSize={10}
        previousPage={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`Table renders the structure correctly with resizing 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={true}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={false}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;

exports[`Table renders the structure correctly with sorting 1`] = `
<div
  className="test"
>
  <div
    className="table"
    role="table"
  >
    <div
      className="table-header"
    />
    <InfiniteBody
      hasMoreItems={false}
      isInfinite={true}
      setPage={[MockFunction]}
      style={
        Object {
          "gridTemplateColumns": "1fr",
        }
      }
    >
      <Header
        className="align-column-left"
        column={
          Object {
            "accessor": "item",
            "alignment": "left",
            "canDrag": false,
            "canHide": false,
            "canResize": false,
            "canSort": false,
            "customFilter": null,
            "header": "Test",
            "hidden": false,
            "id": "0",
            "weight": 1,
            "width": "autoFill",
          }
        }
        dragOver=""
        draggable={false}
        filterable={false}
        hidable={false}
        isDragging={false}
        key="headers_column_0"
        resizable={false}
        resizer={
          <ColumnResizer
            onResizeEnds={[Function]}
            setColumnWidth={[Function]}
          />
        }
        setColumnOrder={[Function]}
        setDragOver={[Function]}
        setIsDragging={[Function]}
        setSortBy={[Function]}
        sortBy={Array []}
        sortable={true}
        visibleColumns={
          Array [
            Object {
              "accessor": "item",
              "alignment": "left",
              "canDrag": false,
              "canHide": false,
              "canResize": false,
              "canSort": false,
              "customFilter": null,
              "header": "Test",
              "hidden": false,
              "id": "0",
              "weight": 1,
              "width": "autoFill",
            },
          ]
        }
      />
      <div
        className="tr"
        key="row_0"
      >
        <div
          className="td td-borders"
          key="row_0_cell_0"
        >
          Test
        </div>
      </div>
    </InfiniteBody>
    <div
      className="table-footer"
    />
  </div>
</div>
`;
