// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BackgroundImage renders content only when image is unavailable 1`] = `
<View
  style={Object {}}
  testID="backgroundImageTest"
>
  <Image
    source={
      Object {
        "uri": "path/to/image",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
        Object {},
        Object {
          "opacity": 0.3333,
          "resizeMode": "cover",
        },
      ]
    }
    testID="backgroundImageTest$image"
  />
  <Text>
    Content
  </Text>
</View>
`;

exports[`BackgroundImage renders nothing when image is loading for the first time 1`] = `null`;

exports[`BackgroundImage renders previous image when image is reloading 1`] = `null`;

exports[`BackgroundImage renders with custom styles 1`] = `
<View
  style={
    Object {
      "height": "80%",
    }
  }
  testID="backgroundImageTest"
>
  <Image
    source={
      Object {
        "uri": "path/to/image",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
        Object {
          "height": "100%",
          "width": "100%",
        },
        Object {
          "opacity": 0.3333,
          "resizeMode": "cover",
        },
      ]
    }
    testID="backgroundImageTest$image"
  />
  <Text>
    Content
  </Text>
</View>
`;

exports[`BackgroundImage renders with default styles 1`] = `
<View
  style={Object {}}
  testID="backgroundImageTest"
>
  <Image
    source={
      Object {
        "uri": "path/to/image",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
        Object {},
        Object {
          "opacity": 0.3333,
          "resizeMode": "cover",
        },
      ]
    }
    testID="backgroundImageTest$image"
  />
  <Text>
    Content
  </Text>
</View>
`;

exports[`BackgroundImage renders without content 1`] = `
<View
  style={Object {}}
  testID="backgroundImageTest"
>
  <Image
    source={
      Object {
        "uri": "path/to/image",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
        Object {},
        Object {
          "opacity": 0.3333,
          "resizeMode": "cover",
        },
      ]
    }
    testID="backgroundImageTest$image"
  />
</View>
`;

exports[`BackgroundImage use correct opacity when image opacity is out of range 1`] = `
<View
  style={Object {}}
  testID="backgroundImageTest"
>
  <Image
    source={
      Object {
        "uri": "path/to/image",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
        Object {},
        Object {
          "opacity": 0,
          "resizeMode": "cover",
        },
      ]
    }
    testID="backgroundImageTest$image"
  />
  <Text>
    Content
  </Text>
</View>
`;

exports[`BackgroundImage use correct opacity when image opacity is out of range 2`] = `
<View
  style={Object {}}
  testID="backgroundImageTest"
>
  <Image
    source={
      Object {
        "uri": "path/to/image",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        undefined,
        Object {},
        Object {
          "opacity": 1,
          "resizeMode": "cover",
        },
      ]
    }
    testID="backgroundImageTest$image"
  />
  <Text>
    Content
  </Text>
</View>
`;
