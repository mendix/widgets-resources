dist: xenial
language: node_js
cache: npm
branches:
    only:
        - master
env:
    global:
        # List of all touched files, excluding paths starting with 'packages'
        - CHANGED_GLOBAL_FILES=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep -v "^packages")
        - CHANGED_WEB_PROJECTS=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep "packages-web")
        - CHANGED_NATIVE_PROJECTS=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep "packages-native")
        - NATIVE_PROJECTS=$(if [ "$CHANGED_NATIVE_PROJECTS" != "" ]; then echo "true"; else echo "false"; fi)
        - WEB_PROJECTS=$(if [ "$CHANGED_WEB_PROJECTS" != "" ]; then echo "true"; else echo "false"; fi)
        # Build only touched packages for pull requests when no shared files were touched
        - PARTIAL_BUILD=$(if [ "$CHANGED_GLOBAL_FILES" == "" ] && [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "true"; else echo "false"; fi)
        # Set arguments so lerna only runs scripts in changed packages
        - SCRIPT_ARGS=$(if [ "$PARTIAL_BUILD" == "true" ]; then echo "--since $TRAVIS_BRANCH"; else echo ""; fi)
before_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $NATIVE_PROJECTS
    - echo $WEB_PROJECTS
    - echo $CHANGED_GLOBAL_FILES
    - echo $PARTIAL_BUILD
    - echo $SCRIPT_ARGS
stages:
    - build
    - tests
jobs:
    include:
        - stage: build
          name: "Lint"
          script:
              - npm run lint -- $SCRIPT_ARGS
        - name: "Build"
          script:
              - npm run build -- $SCRIPT_ARGS
        - name: "Build on Windows"
          os: windows
          script:
              - npm run build -- $SCRIPT_ARGS
        - stage: tests
          name: "Jest unit tests"
          script:
              - npm run test -- $SCRIPT_ARGS
        - name: "Web Automated Tests"
          fast_finish: true
          dist: trusty
          addons:
              chrome: stable
          services:
              - xvfb
          before_install:
              - export CHROME_BIN=chromium-browser
              - export DISPLAY=:99.0
              - sh -e /etc/init.d/xvfb start
              - sleep 3
          script:
              - if [ "$WEB_PROJECTS" == "true" ] && [ "$PARTIAL_BUILD" == "true" ]; then travis_wait 30 npm run test:e2e -- $SCRIPT_ARGS; else echo "No individuals web package changed. Skipping tests"; fi
        - name: "iOS Automated tests"
          language: objective-c
          os: osx
          osx_image: xcode11.2
          env:
              - REACT_NATIVE_VERSION=0.59.9
              - PATH=$PATH:~/Library/Python/2.7/bin
              - CODE_SIGNING_REQUIRED=NO
          before_install:
              - nvm install node
              - node -v
              - npm -v
              - npm install -g detox-cli
              - gem install xcpretty
              - brew tap wix/brew
              - brew install applesimutils --HEAD
              - cd detox
          install:
              - npm ci
          script:
              - if [ "$NATIVE_PROJECTS" == "true" ]; then npm run test:ios; else echo "No native package changed. Skipping ios tests"; fi
        - name: "Android Automated tests"
          os: osx
          osx_image: xcode11.2
          language: objective-c
          env:
              - PATH=$PATH:~/Library/Python/2.7/bin
              - ANDROID_SDK_ROOT="/usr/local/share/android-sdk"
          before_install:
              - brew cask uninstall java
              - brew cask install homebrew/cask-versions/adoptopenjdk8
              - nvm install node
              - node -v
              - npm -v
              - brew tap wix/brew
              - mkdir ~/.android
              - echo 'count=0' > ~/.android/repositories.cfg
              - brew cask install android-sdk
              - cd detox
          install:
              - npm ci
          before_script:
              - yes | sdkmanager --licenses >/dev/null
              - echo y | sdkmanager --no_https "platform-tools" >/dev/null
              - echo y | sdkmanager --no_https "tools" >/dev/null
              - echo y | sdkmanager --no_https "build-tools;28.0.3" >/dev/null
              - echo y | sdkmanager --no_https "platforms;android-28" >/dev/null
              - echo y | sdkmanager --no_https "system-images;android-28;google_apis;x86" >/dev/null
              - avdmanager -s create avd -n EMULATOR -k 'system-images;android-28;google_apis;x86' -f -d 'pixel_xl'
          script:
              - if [ "$NATIVE_PROJECTS" == "true" ]; then npm run test:android; else echo "No native package changed. Skipping android tests"; fi
#          dist: trusty
#          android:
#              components:
#                  - build-tools-25.0.2
#                  - android-25
#                  - sys-img-armeabi-v7a-google_apis-25
#          before_install:
#              - echo no | android create avd --force -n EMULATOR -t android-25 --abi google_apis/armeabi-v7a -c 100M
#              - nvm install node
#              - node -v
#              - npm -v
#          install:
#              - npm install -g detox-cli
#          script:
#              - if [ "$NATIVE_PROJECTS" == "true" ]; then npm run test:e2e:android; else echo "No native package changed. Skipping android tests"; fi
notifications:
    email:
        recipients:
            - diego.antonelli@mendix.com
            - mehmet.izci@mendix.com
            - andries.smit@mendix.com
            - isa.isaku@mendix.com
            - olga.shprygova@mendix.com
    slack:
        template:
            - "Build <%{build_url}|#%{build_number}> of %{repository_slug}@%{branch} in PR <%{pull_request_url}|#%{pull_request_number}> by %{author} %{result} in %{duration}"
        rooms:
            - secure: mendix:$SLACK_KEY#widget-team-private
        on_pull_requests: true
